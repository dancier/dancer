spring:
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: none
  datasource:
    url: jdbc:postgresql://localhost:5432/dancer
    username: dancer
    password: dancer
  liquibase:
    change-log: classpath:liquibase-changeLog.xml

security:
  oauth2:
    client:
      registration:
        facebook:
          clientId: 187874652851693
          clientSecret: 02faee0bf4d2c6be7d8c02c88cf99c6a
          redirectUri: "{baseUrl}/oauth2/callback/{registrationId}"
          scope:
            - email
            - public_profile
      provider:
        facebook:
          authorizationUri:  https://www.facebook.com/v3.0/dialog/oauth
          tokenUri: https://graph.facebook.com/v3.0/oauth/access_token
          userInfoUri: https://graph.facebook.com/v3.0/me?fields=id,first_name,middle_name,last_name,name,email,verified,is_verified,picture.width(250).height(250)

app:
  auth:
    tokenSecret: 04ca023b39512e46d0c2cf4b48d5aac61d34302994c87ed4eff225dcf3b0a218739f3897051a057f9b846a69ea2927a587044164b7bae5e1306219d50b588cb1
    tokenExpirationMsec: 864000000
  cors:
    allowedOrigins: http://localhost:3000 # Comma separated list of allowed origins
  oauth2:
    # After successfully authenticating with the OAuth2 Provider,
    # we'll be generating an auth token for the user and sending the token to the
    # redirectUri mentioned by the client in the /oauth2/authorize request.
    # We're not using cookies because they won't work well in mobile clients.
    authorizedRedirectUris:
      - http://localhost:3000/oauth2/redirect
      - myandroidapp://oauth2/redirect
      - myiosapp://oauth2/redirect
logging:
  level:
    root: INFO
    net:
      dancier: DEBUG
